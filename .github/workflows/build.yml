name: Build FFmpeg Audio Libraries

# Grant the runner permission to fetch marketplace actions
permissions:
  contents: read      # already there by default
  actions: read       # <— this line lets it download actions/upload-artifact

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-audio-libs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android NDK
        run: |
          curl -sSL https://dl.google.com/android/repository/android-ndk-r25c-linux.zip -o ndk.zip
          unzip -q ndk.zip -d android-ndk

      - name: Make build script executable
        run: chmod +x build-audio-convertor-ffmpeg.sh

      - name: Run audio build script
        run: ./build-audio-convertor-ffmpeg.sh

      - name: Verify 16 KB page alignment
        run: |
          echo "Checking PT_LOAD segments (and alignments) for all .so files…"
          failed=false
      
          for so in output/arm64-v8a/*.so; do
            echo
            echo "→ $so"
            echo "  Full PT_LOAD table:"
            readelf -l "$so" | grep 'LOAD' | sed 's/^/    /'
      
            # Now check the alignment field on the *second* line of each LOAD pair
            # (we use awk to pair header+segment and test column 4)
            misaligned=$(readelf -l "$so" \
              | awk '/^ *LOAD/ { hdr=$0; getline; if ($4!="0x00004000") print hdr "\n" $0 }')
      
            if [ -z "$misaligned" ]; then
              echo "  ✅ All PT_LOAD segments are 16 KB aligned"
            else
              echo "  ⚠️  Found misaligned PT_LOAD segments in $so:"
              echo "$misaligned" | sed 's/^/    /'
              failed=true
            fi
          done
      
          if [ "$failed" = true ]; then
            echo
            echo "::error ::One or more .so files are NOT 16 KB page-aligned"
            exit 1
          fi
      
          echo
          echo "✅ All .so files passed the 16 KB alignment check"

      - name: Upload .so artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-audio-libs
          path: output/**/*.so
